nats:
  image:
    repository: nats
    tag: latest #change
    # tag: 2.9.11-alpine
    pullPolicy: IfNotPresent
  serverNamePrefix: ""
  serverTags:
  profiling:
    enabled: false
    port: 6000
  healthcheck:
    detectHealthz: true
    enableHealthz: true
    enableHealthzLivenessReadiness: false
    liveness:
      enabled: true
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 30
      successThreshold: 1
      failureThreshold: 3
    readiness:
      enabled: true
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    startup:
      enabled: true
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 30
  hostNetwork: false
  dnsPolicy: ClusterFirst
  configChecksumAnnotation: true
  securityContext: {}
  externalAccess: true #change
  # externalAccess: false
  advertise: false #change
  # advertise: true
  serviceAccount:
    create: true
    annotations: {}
    name: "nats-server" #change
    # name: ""
  connectRetries: 120
  selectorLabels: {}
  resources: {}
  client:
    port: 4222
    portName: "client"
  limits:
    maxConnections:
    maxSubscriptions:
    maxControlLine:
    maxPayload:
    writeDeadline:
    maxPending:
    maxPings:
    pingInterval:
    lameDuckGracePeriod: "10s"
    lameDuckDuration: "30s"
  terminationGracePeriodSeconds: 60
  logging:
    debug:
    trace:
    logtime:
    connectErrorReports:
    reconnectErrorReports:
  jetstream:
    enabled: false
    domain:
    uniqueTag:
    encryption:
    memStorage:
      enabled: true
      size: 1Gi
    fileStorage:
      enabled: true
      storageDirectory: /data
      size: 10Gi
      accessModes:
      - ReadWriteOnce
mqtt:
  enabled: false
  ackWait: 1m
  maxAckPending: 100
nameOverride: ""
namespaceOverride: ""
imagePullSecrets: []
securityContext: {}
affinity: {}
priorityClassName: null
topologyKeys: []
topologySpreadConstraints: []
podAnnotations: {}
podDisruptionBudget:
  enabled: true
  maxUnavailable: 1
nodeSelector: {}
tolerations: []
statefulSetAnnotations: {}
statefulSetPodLabels: {}
serviceAnnotations: {}
additionalContainers: []
additionalVolumes: []
additionalVolumeMounts: []
cluster:
  enabled: true #change
  # enabled: false
  replicas: 1
  noAdvertise: true #change
  # noAdvertise: false
  extraRoutes: []
leafnodes:
  enabled: true #change
  # enabled: false
  port: 7422
  noAdvertise: true #change
  # noAdvertise: false
gateway:
  enabled: false
  port: 7522
  name: "default"
bootconfig:
  image:
    repository: natsio/nats-boot-config
    tag: latest #change
    # tag: 0.9.0
    pullPolicy: IfNotPresent
  securityContext: {}
natsbox:
  enabled: true
  image:
    repository: natsio/nats-box
    tag: latest #change
    # repository: https://hub.docker.com/r/synadia/nats-server #change
    # tag: new
    pullPolicy: IfNotPresent
  securityContext: {}
  additionalLabels: {}
  imagePullSecrets: []
  podAnnotations: {}
  podLabels: {}
  affinity: {}
  nodeSelector: {}
  tolerations: []
  extraVolumeMounts: []
  extraVolumes: []
reloader:
  enabled: true
  image:
    repository: natsio/nats-server-config-reloader
    tag: latest #change
    # tag: 0.9.0
    pullPolicy: IfNotPresent
  securityContext: {}
  extraConfigs: []
exporter:
  enabled: true
  image:
    repository: natsio/prometheus-nats-exporter
    tag: latest #change
    # tag: 0.10.1
    pullPolicy: IfNotPresent
    # registry: docker.io
  portName: metrics
  securityContext: {}
  resources: {}
  serviceMonitor:
    enabled: false
    labels: {}
    annotations: {}
    path: /metrics
auth:
  enabled: false
  resolver:
    type: none
    allowDelete: false
    interval: 2m
    operator:
    systemAccount:
    store:
      dir: "/accounts/jwt"
      size: 1Gi
websocket:
  enabled: false
  port: 443
  noTLS: true
  sameOrigin: false
  allowedOrigins: []
networkPolicy:
  enabled: false
  allowExternal: true
  extraIngress: []
  extraEgress: []
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}
k8sClusterDomain: cluster.local
useFQDN: true
commonLabels: {}
podManagementPolicy: Parallel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nats-server
  namespace: default
